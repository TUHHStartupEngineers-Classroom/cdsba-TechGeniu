{
  "hash": "52c47515ddf7bb752846b165db61e589",
  "result": {
    "markdown": "---\ntitle: \"Regression Discontinuity\"\nauthor: \"Sriramkumar Sarida\"\n---\n\n\n# Sensitivity of Bandwidth analysis\n\n------------------------------------------------------------------------\n\n## Load the data frame\n\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-1_52ca5507c15708c2e9e23bf1f32c8612'}\n\n```{.r .cell-code}\ncoupon_data  <- readRDS(\"../../data/coupon.rds\")\nsummary(coupon_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>  days_since_last  days_since_last_centered   coupon        purchase_after   \n#>  Min.   :  1.00   Min.   :-59.00           Mode :logical   Min.   :-0.8649  \n#>  1st Qu.: 14.07   1st Qu.:-45.92           FALSE:3854      1st Qu.:10.3311  \n#>  Median : 30.60   Median :-29.40           TRUE :1146      Median :13.3817  \n#>  Mean   : 39.72   Mean   :-20.28                           Mean   :14.4752  \n#>  3rd Qu.: 57.10   3rd Qu.: -2.90                           3rd Qu.:18.3075  \n#>  Max.   :210.00   Max.   :150.00                           Max.   :46.7593\n```\n:::\n\n```{.r .cell-code}\nhead(coupon_data)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"days_since_last\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"days_since_last_centered\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"coupon\"],\"name\":[3],\"type\":[\"lgl\"],\"align\":[\"right\"]},{\"label\":[\"purchase_after\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"82.0\",\"2\":\"22.0\",\"3\":\"TRUE\",\"4\":\"22.821321\"},{\"1\":\"39.0\",\"2\":\"-21.0\",\"3\":\"FALSE\",\"4\":\"11.583787\"},{\"1\":\"7.2\",\"2\":\"-52.8\",\"3\":\"FALSE\",\"4\":\"15.982824\"},{\"1\":\"115.6\",\"2\":\"55.6\",\"3\":\"TRUE\",\"4\":\"20.458175\"},{\"1\":\"17.0\",\"2\":\"-43.0\",\"3\":\"FALSE\",\"4\":\"8.904734\"},{\"1\":\"42.8\",\"2\":\"-17.2\",\"3\":\"FALSE\",\"4\":\"6.723591\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\ndim(coupon_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 5000    4\n```\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## Test with half Bandwidth\n\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-2_41d479b3bd00ff82c82d3e8e02c072d1'}\n\n```{.r .cell-code}\nlibrary(dplyr)\nc0 <- 60\nbw <- (c0 + c(-2.5, 2.5))\n\nbw\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 57.5 62.5\n```\n:::\n\n```{.r .cell-code}\n# Subsets below and above threshold in specified bandwidth\ndf_bw_below <- coupon_data %>% filter(days_since_last >= bw[1] & days_since_last < c0)\ndf_bw_above <- coupon_data %>% filter(days_since_last >= c0 & days_since_last <= bw[2])\n\ndf_bw <- bind_rows(df_bw_above, df_bw_below)\ndim(df_bw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 181   4\n```\n:::\n\n```{.r .cell-code}\nsummary(df_bw_below)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>  days_since_last days_since_last_centered   coupon        purchase_after  \n#>  Min.   :57.50   Min.   :-2.500           Mode :logical   Min.   : 1.642  \n#>  1st Qu.:58.00   1st Qu.:-2.000           FALSE:92        1st Qu.: 9.042  \n#>  Median :58.35   Median :-1.650                           Median :10.471  \n#>  Mean   :58.57   Mean   :-1.433                           Mean   :10.675  \n#>  3rd Qu.:59.25   3rd Qu.:-0.750                           3rd Qu.:12.375  \n#>  Max.   :59.90   Max.   :-0.100                           Max.   :18.335\n```\n:::\n\n```{.r .cell-code}\nsummary(df_bw_above)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>  days_since_last days_since_last_centered  coupon        purchase_after  \n#>  Min.   :60.00   Min.   :0.000            Mode:logical   Min.   : 7.861  \n#>  1st Qu.:60.60   1st Qu.:0.600            TRUE:89        1st Qu.:17.398  \n#>  Median :61.40   Median :1.400                           Median :19.976  \n#>  Mean   :61.34   Mean   :1.338                           Mean   :19.750  \n#>  3rd Qu.:62.00   3rd Qu.:2.000                           3rd Qu.:22.162  \n#>  Max.   :62.50   Max.   :2.500                           Max.   :27.350\n```\n:::\n:::\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-3_868a5915e8e5d753c28538ca0aa252ed'}\n\n```{.r .cell-code}\nmodel_bw_below <- lm(purchase_after ~ days_since_last, df_bw_below)\nmodel_bw_above <- lm(purchase_after ~ days_since_last, df_bw_above)\n\ny0 <- predict(model_bw_below, tibble(days_since_last = c0))\ny1 <- predict(model_bw_above, tibble(days_since_last = c0))\n\nlate <- y1 - y0\nsprintf(\"LATE: %.2f\", late)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"LATE: 7.36\"\n```\n:::\n:::\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-4_e517227b901896f69253bd868791feaf'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\n# Minimum and maximum for y-axis limits\nmin_y <- min(df_bw$purchase_after)\nmax_y <- max(df_bw$purchase_after)\n\n# Add lines for vertical distance and change limits of x-axis.\ndep_var_bw <- \n  ggplot(df_bw, aes(x = days_since_last, y = purchase_after, color = coupon)) +\n  geom_vline(xintercept = c0, linewidth = 2) +\n  geom_point(alpha = 0.4, size = 1) +\n  geom_smooth(data = df_bw_below, method = \"lm\", se = F, linewidth = 2) +\n  geom_smooth(data = df_bw_above, method = \"lm\", se = F, linewidth = 2) +\n  geom_segment(aes(x = c0, xend = bw[2], y = y0, yend = y0),\n             linetype = \"dotted\") +\n  geom_segment(aes(x = bw[1], xend = c0, y = y1, yend = y1),\n               linetype = \"dotted\") +\n  annotate(\"text\", x = c0+2, y = mean(c(y1, y0)-2),\n           label = sprintf(\"Difference: %.2f\", (y1 - y0)),\n           fontface = 2) +\n  scale_y_continuous(limits = c(min_y, max_y)) + \n  scale_color_discrete(labels = c(\"No coupon\", \"Coupon\")) +\n  xlab(\"Days since last purchase\") +\n  ylab(\"Purchase after coupon assignment\") +\n  theme(legend.title = element_blank())\ndep_var_bw\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](10_rdd_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## Test with Twice the Bandwidth\n\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-5_c9572cb61966f1876f7c2bdb1e62ee9e'}\n\n```{.r .cell-code}\nlibrary(dplyr)\nc0 <- 60\nbw <- (c0 + c(-10, 10))\n\nbw\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 50 70\n```\n:::\n\n```{.r .cell-code}\n# Subsets below and above threshold in specified bandwidth\ndf_bw_below <- coupon_data %>% filter(days_since_last >= bw[1] & days_since_last < c0)\ndf_bw_above <- coupon_data %>% filter(days_since_last >= c0 & days_since_last <= bw[2])\n\ndf_bw <- bind_rows(df_bw_above, df_bw_below)\ndim(df_bw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 629   4\n```\n:::\n\n```{.r .cell-code}\nsummary(df_bw_below)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>  days_since_last days_since_last_centered   coupon        purchase_after  \n#>  Min.   :50.00   Min.   :-10.000          Mode :logical   Min.   : 1.642  \n#>  1st Qu.:52.40   1st Qu.: -7.600          FALSE:344       1st Qu.: 8.554  \n#>  Median :54.70   Median : -5.300                          Median :10.431  \n#>  Mean   :54.92   Mean   : -5.084                          Mean   :10.545  \n#>  3rd Qu.:57.60   3rd Qu.: -2.400                          3rd Qu.:12.529  \n#>  Max.   :59.90   Max.   : -0.100                          Max.   :19.198\n```\n:::\n\n```{.r .cell-code}\nsummary(df_bw_above)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>  days_since_last days_since_last_centered  coupon        purchase_after  \n#>  Min.   :60.00   Min.   : 0.000           Mode:logical   Min.   : 7.861  \n#>  1st Qu.:62.20   1st Qu.: 2.200           TRUE:285       1st Qu.:18.044  \n#>  Median :64.60   Median : 4.600                          Median :20.347  \n#>  Mean   :64.73   Mean   : 4.726                          Mean   :20.200  \n#>  3rd Qu.:67.30   3rd Qu.: 7.300                          3rd Qu.:22.230  \n#>  Max.   :70.00   Max.   :10.000                          Max.   :30.847\n```\n:::\n:::\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-6_48d24c2097d7601982ae2b5e97fc522e'}\n\n```{.r .cell-code}\nmodel_bw_below <- lm(purchase_after ~ days_since_last, df_bw_below)\nmodel_bw_above <- lm(purchase_after ~ days_since_last, df_bw_above)\n\ny0 <- predict(model_bw_below, tibble(days_since_last = c0))\ny1 <- predict(model_bw_above, tibble(days_since_last = c0))\n\nlate <- y1 - y0\nsprintf(\"LATE: %.2f\", late)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"LATE: 9.51\"\n```\n:::\n:::\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-7_3f2e7e117755a52dd9e21d6e6bbdc5f1'}\n\n```{.r .cell-code}\n# Minimum and maximum for y-axis limits\nmin_y <- min(df_bw$purchase_after)\nmax_y <- max(df_bw$purchase_after)\n\n# Add lines for vertical distance and change limits of x-axis.\ndep_var_bw <- \n  ggplot(df_bw, aes(x = days_since_last, y = purchase_after, color = coupon)) +\n  geom_vline(xintercept = c0, linewidth = 2) +\n  geom_point(alpha = 0.4, size = 1) +\n  geom_smooth(data = df_bw_below, method = \"lm\", se = F, linewidth = 2) +\n  geom_smooth(data = df_bw_above, method = \"lm\", se = F, linewidth = 2) +\n  geom_segment(aes(x = c0, xend = bw[2], y = y0, yend = y0),\n             linetype = \"dotted\") +\n  geom_segment(aes(x = bw[1], xend = c0, y = y1, yend = y1),\n               linetype = \"dotted\") +\n  annotate(\"text\", x = c0+2, y = mean(c(y1, y0)-2),\n           label = sprintf(\"Difference: %.2f\", (y1 - y0)),\n           fontface = 2) +\n  scale_y_continuous(limits = c(min_y, max_y)) + \n  scale_color_discrete(labels = c(\"No coupon\", \"Coupon\")) +\n  xlab(\"Days since last purchase\") +\n  ylab(\"Purchase after coupon assignment\") +\n  theme(legend.title = element_blank())\ndep_var_bw\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](10_rdd_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nThese were the calculated LATE values for the selected bandwidths:\n\n-   Bandwidth = 5, LATE = 7.99\n\n-   Bandwidth = 2.5 (half), LATE = 7.36\n\n-   Bandwidth = 10 (Double), LATE = 9.51\n\nThis indicates LATE values are sensitive to the bandwidth chosen. The LATE is higher when the bandwidth is doubled and slightly lower when the bandwidth is halved. A larger bandwidth captures a broader range of the data, possibly introducing more variation. A smaller bandwidth might not capture enough of the treatment's effect, leading to a smaller estimate.\n\n------------------------------------------------------------------------\n\n## Changed Cut off with different past campaign\n\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-8_7032fb65e076606e324803ab1bae632f'}\n\n```{.r .cell-code}\nshipping_data  <- readRDS(\"../../data/shipping.rds\")\nsummary(shipping_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>  purchase_amount \n#>  Min.   :  1.00  \n#>  1st Qu.: 13.75  \n#>  Median : 31.94  \n#>  Mean   : 35.06  \n#>  3rd Qu.: 49.59  \n#>  Max.   :150.00\n```\n:::\n\n```{.r .cell-code}\nhead(shipping_data)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"purchase_amount\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"13.105677\"},{\"1\":\"37.120848\"},{\"1\":\"11.258422\"},{\"1\":\"9.453785\"},{\"1\":\"53.237258\"},{\"1\":\"20.541164\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\ndim(shipping_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 6666    1\n```\n:::\n:::\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-9_d5aebe050fc2beeab5579925639a8579'}\n\n```{.r .cell-code}\nshipping_data$shipping_status <- ifelse(shipping_data$purchase_amount > 30, \"Free\", \"Not Free\")\n\n# Plot the data with color differentiation\nggplot(shipping_data, aes(x = purchase_amount, y = shipping_status, color = shipping_status)) +\n  geom_point(alpha = 0.2, position = position_jitter(height = 0.1, width = 0)) +\n  geom_vline(xintercept = 30, color = \"blue\", linetype = \"dashed\") +\n  scale_fill_manual(values = c(\"Not Free\" = \"red\", \"Free\" = \"green\")) +\n  labs(x = \"Purchase Amount\", y = \"\", color = \"Shipping Status\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](10_rdd_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n-   The plot seems to be a valid running variable with the cut-off at 30€. This provided more insight for the customers to spend more than 30€ to avail free shipping.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}